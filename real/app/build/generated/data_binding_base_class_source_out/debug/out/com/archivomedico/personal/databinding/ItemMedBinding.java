// Generated by view binder compiler. Do not edit!
package com.archivomedico.personal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.archivomedico.personal.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.checkbox.MaterialCheckBox;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMedBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final Button btnEdit;

  @NonNull
  public final MaterialCheckBox cbActive;

  @NonNull
  public final TextView tvDay;

  @NonNull
  public final TextView tvDays;

  @NonNull
  public final TextView tvDose;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvTime;

  private ItemMedBinding(@NonNull MaterialCardView rootView, @NonNull Button btnDelete,
      @NonNull Button btnEdit, @NonNull MaterialCheckBox cbActive, @NonNull TextView tvDay,
      @NonNull TextView tvDays, @NonNull TextView tvDose, @NonNull TextView tvName,
      @NonNull TextView tvTime) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnEdit = btnEdit;
    this.cbActive = cbActive;
    this.tvDay = tvDay;
    this.tvDays = tvDays;
    this.tvDose = tvDose;
    this.tvName = tvName;
    this.tvTime = tvTime;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMedBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_med, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      Button btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.cbActive;
      MaterialCheckBox cbActive = ViewBindings.findChildViewById(rootView, id);
      if (cbActive == null) {
        break missingId;
      }

      id = R.id.tvDay;
      TextView tvDay = ViewBindings.findChildViewById(rootView, id);
      if (tvDay == null) {
        break missingId;
      }

      id = R.id.tvDays;
      TextView tvDays = ViewBindings.findChildViewById(rootView, id);
      if (tvDays == null) {
        break missingId;
      }

      id = R.id.tvDose;
      TextView tvDose = ViewBindings.findChildViewById(rootView, id);
      if (tvDose == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvTime;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      return new ItemMedBinding((MaterialCardView) rootView, btnDelete, btnEdit, cbActive, tvDay,
          tvDays, tvDose, tvName, tvTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
